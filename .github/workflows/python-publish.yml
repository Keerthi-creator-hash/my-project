# Workflow Name
name: Flask App CI/CD with PyPI Publish

on:
  push:
    branches:
      - main  # Run CI/CD on pushes to the main branch
  pull_request:
    branches:
      - main  # Run tests on pull requests targeting the main branch
  release:
    types: [published]  # Publish to PyPI on release creation

permissions:
  contents: read

jobs:
  # Step 1: Test the application
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
  run: |
    python -m pip install --upgrade pip
    python -m pip install -r requirements.txt


      - name: Run tests
        run: pytest  # Run all test cases in your Flask app

  # Step 2: Build the release distributions (for PyPI publishing)
  release-build:
    needs: test  # Ensure tests pass before building
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build distributions
        run: |
          python -m pip install --upgrade pip build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  # Step 3: Publish to PyPI
  pypi-publish:
    needs: release-build
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/YOURPROJECT  # Update with your PyPI project URL

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
